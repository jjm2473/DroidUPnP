buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.3'
    }
}
apply plugin: 'com.android.application'

repositories {
    google()
    jcenter()
    mavenCentral()
    mavenLocal()
    maven {
        url 'http://4thline.org/m2'
    }
}

dependencies {
    // Android support
    implementation 'com.android.support:appcompat-v7:26.1.0'

    // Cling
    implementation group: 'org.fourthline.cling', name: 'cling-core', version:'2.1.1'
    implementation group: 'org.fourthline.cling', name: 'cling-support', version:'2.1.1'
    implementation group: 'org.eclipse.jetty', name: 'jetty-server', version:'8.1.18.v20150929'
    implementation group: 'org.eclipse.jetty', name: 'jetty-servlet', version:'8.1.18.v20150929'
    implementation group: 'org.eclipse.jetty', name: 'jetty-client', version:'8.1.18.v20150929'
    runtimeOnly group: 'org.slf4j', name: 'slf4j-jdk14', version:'1.7.14'

    implementation('de.psdev.licensesdialog:licensesdialog:1.8.1') {
        exclude module: 'support-v4'
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "org.droidupnp"
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 18
        versionName "2.4.1"
    }

    packagingOptions {
        exclude 'META-INF/beans.xml'
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs { release }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/res']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
    }
}

File propFile = file('signing.properties');
if (propFile.exists()) {
    def Properties props = new Properties()
    props.load(new FileInputStream(propFile))

    if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        android.buildTypes.release.signingConfig = null
    }
} else {
        android.buildTypes.release.signingConfig = null
}
